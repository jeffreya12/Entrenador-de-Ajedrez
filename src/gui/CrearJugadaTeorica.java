/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Jugada;
import model.JugadaTeorica;
import model.Partida;
import model.Pieza;

/**
 *
 * @author jeffrey-lmde
 */
public class CrearJugadaTeorica extends javax.swing.JFrame {
    private File fichero;
    private Partida partida;
    private ArrayList<Pieza> listaDePiezas;
    /**
     * Creates new form CrearJugadaTeorica
     */
    public CrearJugadaTeorica() {
        initComponents();
        initBoard();
        fichero = null;
        partida = application.EntrenadorDeAjedrez.getPartida();
        listaDePiezas = new ArrayList<>();
        setIconImage(new ImageIcon(getClass().getResource("../resources/icon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        nombreTXT = new javax.swing.JTextField();
        cancelar = new javax.swing.JToggleButton();
        cargarFoto = new javax.swing.JButton();
        anio = new javax.swing.JLabel();
        anioTXT = new javax.swing.JTextField();
        direccionImagen = new javax.swing.JLabel();
        guardar = new javax.swing.JButton();
        a1 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        c1 = new javax.swing.JButton();
        d1 = new javax.swing.JButton();
        e1 = new javax.swing.JButton();
        f1 = new javax.swing.JButton();
        g1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        c2 = new javax.swing.JButton();
        d2 = new javax.swing.JButton();
        a3 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        c3 = new javax.swing.JButton();
        e2 = new javax.swing.JButton();
        d3 = new javax.swing.JButton();
        a4 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        c4 = new javax.swing.JButton();
        d4 = new javax.swing.JButton();
        e3 = new javax.swing.JButton();
        a6 = new javax.swing.JButton();
        a7 = new javax.swing.JButton();
        a8 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        c5 = new javax.swing.JButton();
        c6 = new javax.swing.JButton();
        c7 = new javax.swing.JButton();
        c8 = new javax.swing.JButton();
        d5 = new javax.swing.JButton();
        d6 = new javax.swing.JButton();
        f2 = new javax.swing.JButton();
        e4 = new javax.swing.JButton();
        f3 = new javax.swing.JButton();
        g2 = new javax.swing.JButton();
        g3 = new javax.swing.JButton();
        f4 = new javax.swing.JButton();
        e5 = new javax.swing.JButton();
        f5 = new javax.swing.JButton();
        g4 = new javax.swing.JButton();
        d8 = new javax.swing.JButton();
        d7 = new javax.swing.JButton();
        e6 = new javax.swing.JButton();
        e7 = new javax.swing.JButton();
        f6 = new javax.swing.JButton();
        a5 = new javax.swing.JButton();
        e8 = new javax.swing.JButton();
        f7 = new javax.swing.JButton();
        g5 = new javax.swing.JButton();
        g6 = new javax.swing.JButton();
        f8 = new javax.swing.JButton();
        g7 = new javax.swing.JButton();
        g8 = new javax.swing.JButton();
        h1 = new javax.swing.JButton();
        h3 = new javax.swing.JButton();
        h2 = new javax.swing.JButton();
        h4 = new javax.swing.JButton();
        h5 = new javax.swing.JButton();
        h6 = new javax.swing.JButton();
        h7 = new javax.swing.JButton();
        h8 = new javax.swing.JButton();
        a2 = new javax.swing.JButton();
        tablero = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Entrenador de Ajedrez");
        setMinimumSize(new java.awt.Dimension(500, 655));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Roboto Light", 0, 24)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Jugada Teorica");
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 477, -1));

        nombre.setText("Nombre: ");
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 64, 129, -1));

        nombreTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTXTActionPerformed(evt);
            }
        });
        getContentPane().add(nombreTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 61, 330, -1));

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 589, 100, -1));

        cargarFoto.setText("Cargar foto");
        cargarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarFotoActionPerformed(evt);
            }
        });
        getContentPane().add(cargarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 125, 100, -1));

        anio.setText("AÅˆo / Identificador:");
        getContentPane().add(anio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 129, -1));

        anioTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anioTXTActionPerformed(evt);
            }
        });
        getContentPane().add(anioTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 87, 330, -1));

        direccionImagen.setMaximumSize(new java.awt.Dimension(75, 23));
        direccionImagen.setMinimumSize(new java.awt.Dimension(75, 23));
        direccionImagen.setPreferredSize(new java.awt.Dimension(75, 23));
        getContentPane().add(direccionImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 125, 329, -1));

        guardar.setText("Guardar");
        guardar.setMaximumSize(new java.awt.Dimension(100, 23));
        guardar.setMinimumSize(new java.awt.Dimension(100, 23));
        guardar.setPreferredSize(new java.awt.Dimension(100, 23));
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        getContentPane().add(guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 589, 110, 27));

        a1.setBackground(new java.awt.Color(255, 0, 0));
        a1.setMaximumSize(new java.awt.Dimension(50, 50));
        a1.setMinimumSize(new java.awt.Dimension(50, 50));
        a1.setPreferredSize(new java.awt.Dimension(50, 50));
        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });
        getContentPane().add(a1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        b1.setBackground(new java.awt.Color(255, 0, 0));
        b1.setMaximumSize(new java.awt.Dimension(50, 50));
        b1.setMinimumSize(new java.awt.Dimension(50, 50));
        b1.setPreferredSize(new java.awt.Dimension(50, 50));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        getContentPane().add(b1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        c1.setBackground(new java.awt.Color(255, 0, 0));
        c1.setMaximumSize(new java.awt.Dimension(50, 50));
        c1.setMinimumSize(new java.awt.Dimension(50, 50));
        c1.setPreferredSize(new java.awt.Dimension(50, 50));
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        getContentPane().add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        d1.setBackground(new java.awt.Color(255, 0, 0));
        d1.setMaximumSize(new java.awt.Dimension(50, 50));
        d1.setMinimumSize(new java.awt.Dimension(50, 50));
        d1.setPreferredSize(new java.awt.Dimension(50, 50));
        d1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d1ActionPerformed(evt);
            }
        });
        getContentPane().add(d1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, -1, -1));

        e1.setBackground(new java.awt.Color(255, 0, 0));
        e1.setMaximumSize(new java.awt.Dimension(50, 50));
        e1.setMinimumSize(new java.awt.Dimension(50, 50));
        e1.setPreferredSize(new java.awt.Dimension(50, 50));
        e1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e1ActionPerformed(evt);
            }
        });
        getContentPane().add(e1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, -1, -1));

        f1.setBackground(new java.awt.Color(255, 0, 0));
        f1.setMaximumSize(new java.awt.Dimension(50, 50));
        f1.setMinimumSize(new java.awt.Dimension(50, 50));
        f1.setPreferredSize(new java.awt.Dimension(50, 50));
        f1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f1ActionPerformed(evt);
            }
        });
        getContentPane().add(f1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, -1, -1));

        g1.setBackground(new java.awt.Color(255, 0, 0));
        g1.setMaximumSize(new java.awt.Dimension(50, 50));
        g1.setMinimumSize(new java.awt.Dimension(50, 50));
        g1.setPreferredSize(new java.awt.Dimension(50, 50));
        g1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g1ActionPerformed(evt);
            }
        });
        getContentPane().add(g1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, -1, -1));

        b2.setBackground(new java.awt.Color(255, 0, 0));
        b2.setMaximumSize(new java.awt.Dimension(50, 50));
        b2.setMinimumSize(new java.awt.Dimension(50, 50));
        b2.setPreferredSize(new java.awt.Dimension(50, 50));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });
        getContentPane().add(b2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        c2.setBackground(new java.awt.Color(255, 0, 0));
        c2.setMaximumSize(new java.awt.Dimension(50, 50));
        c2.setMinimumSize(new java.awt.Dimension(50, 50));
        c2.setPreferredSize(new java.awt.Dimension(50, 50));
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });
        getContentPane().add(c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        d2.setBackground(new java.awt.Color(255, 0, 0));
        d2.setMaximumSize(new java.awt.Dimension(50, 50));
        d2.setMinimumSize(new java.awt.Dimension(50, 50));
        d2.setPreferredSize(new java.awt.Dimension(50, 50));
        d2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d2ActionPerformed(evt);
            }
        });
        getContentPane().add(d2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, -1, -1));

        a3.setBackground(new java.awt.Color(255, 0, 0));
        a3.setMaximumSize(new java.awt.Dimension(50, 50));
        a3.setMinimumSize(new java.awt.Dimension(50, 50));
        a3.setPreferredSize(new java.awt.Dimension(50, 50));
        a3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a3ActionPerformed(evt);
            }
        });
        getContentPane().add(a3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, -1, -1));

        b3.setBackground(new java.awt.Color(255, 0, 0));
        b3.setMaximumSize(new java.awt.Dimension(50, 50));
        b3.setMinimumSize(new java.awt.Dimension(50, 50));
        b3.setPreferredSize(new java.awt.Dimension(50, 50));
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });
        getContentPane().add(b3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, -1, -1));

        c3.setBackground(new java.awt.Color(255, 0, 0));
        c3.setMaximumSize(new java.awt.Dimension(50, 50));
        c3.setMinimumSize(new java.awt.Dimension(50, 50));
        c3.setPreferredSize(new java.awt.Dimension(50, 50));
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });
        getContentPane().add(c3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, -1, -1));

        e2.setBackground(new java.awt.Color(255, 0, 0));
        e2.setMaximumSize(new java.awt.Dimension(50, 50));
        e2.setMinimumSize(new java.awt.Dimension(50, 50));
        e2.setPreferredSize(new java.awt.Dimension(50, 50));
        e2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e2ActionPerformed(evt);
            }
        });
        getContentPane().add(e2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, -1, -1));

        d3.setBackground(new java.awt.Color(255, 0, 0));
        d3.setMaximumSize(new java.awt.Dimension(50, 50));
        d3.setMinimumSize(new java.awt.Dimension(50, 50));
        d3.setPreferredSize(new java.awt.Dimension(50, 50));
        d3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d3ActionPerformed(evt);
            }
        });
        getContentPane().add(d3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, -1, -1));

        a4.setBackground(new java.awt.Color(255, 0, 0));
        a4.setMaximumSize(new java.awt.Dimension(50, 50));
        a4.setMinimumSize(new java.awt.Dimension(50, 50));
        a4.setPreferredSize(new java.awt.Dimension(50, 50));
        a4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a4ActionPerformed(evt);
            }
        });
        getContentPane().add(a4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, -1, -1));

        b4.setBackground(new java.awt.Color(255, 0, 0));
        b4.setMaximumSize(new java.awt.Dimension(50, 50));
        b4.setMinimumSize(new java.awt.Dimension(50, 50));
        b4.setPreferredSize(new java.awt.Dimension(50, 50));
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });
        getContentPane().add(b4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, -1, -1));

        c4.setBackground(new java.awt.Color(255, 0, 0));
        c4.setMaximumSize(new java.awt.Dimension(50, 50));
        c4.setMinimumSize(new java.awt.Dimension(50, 50));
        c4.setPreferredSize(new java.awt.Dimension(50, 50));
        c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c4ActionPerformed(evt);
            }
        });
        getContentPane().add(c4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        d4.setBackground(new java.awt.Color(255, 0, 0));
        d4.setMaximumSize(new java.awt.Dimension(50, 50));
        d4.setMinimumSize(new java.awt.Dimension(50, 50));
        d4.setPreferredSize(new java.awt.Dimension(50, 50));
        d4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d4ActionPerformed(evt);
            }
        });
        getContentPane().add(d4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, -1, -1));

        e3.setBackground(new java.awt.Color(255, 0, 0));
        e3.setMaximumSize(new java.awt.Dimension(50, 50));
        e3.setMinimumSize(new java.awt.Dimension(50, 50));
        e3.setPreferredSize(new java.awt.Dimension(50, 50));
        e3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e3ActionPerformed(evt);
            }
        });
        getContentPane().add(e3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, -1));

        a6.setBackground(new java.awt.Color(255, 0, 0));
        a6.setMaximumSize(new java.awt.Dimension(50, 50));
        a6.setMinimumSize(new java.awt.Dimension(50, 50));
        a6.setPreferredSize(new java.awt.Dimension(50, 50));
        a6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a6ActionPerformed(evt);
            }
        });
        getContentPane().add(a6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, -1, -1));

        a7.setBackground(new java.awt.Color(255, 0, 0));
        a7.setMaximumSize(new java.awt.Dimension(50, 50));
        a7.setMinimumSize(new java.awt.Dimension(50, 50));
        a7.setPreferredSize(new java.awt.Dimension(50, 50));
        a7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a7ActionPerformed(evt);
            }
        });
        getContentPane().add(a7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, -1));

        a8.setBackground(new java.awt.Color(255, 0, 0));
        a8.setMaximumSize(new java.awt.Dimension(50, 50));
        a8.setMinimumSize(new java.awt.Dimension(50, 50));
        a8.setPreferredSize(new java.awt.Dimension(50, 50));
        a8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a8ActionPerformed(evt);
            }
        });
        getContentPane().add(a8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, -1, -1));

        b5.setBackground(new java.awt.Color(255, 0, 0));
        b5.setMaximumSize(new java.awt.Dimension(50, 50));
        b5.setMinimumSize(new java.awt.Dimension(50, 50));
        b5.setPreferredSize(new java.awt.Dimension(50, 50));
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });
        getContentPane().add(b5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, -1, -1));

        b6.setBackground(new java.awt.Color(255, 0, 0));
        b6.setMaximumSize(new java.awt.Dimension(50, 50));
        b6.setMinimumSize(new java.awt.Dimension(50, 50));
        b6.setPreferredSize(new java.awt.Dimension(50, 50));
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });
        getContentPane().add(b6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, -1, -1));

        b7.setBackground(new java.awt.Color(255, 0, 0));
        b7.setMaximumSize(new java.awt.Dimension(50, 50));
        b7.setMinimumSize(new java.awt.Dimension(50, 50));
        b7.setPreferredSize(new java.awt.Dimension(50, 50));
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });
        getContentPane().add(b7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, -1, -1));

        b8.setBackground(new java.awt.Color(255, 0, 0));
        b8.setMaximumSize(new java.awt.Dimension(50, 50));
        b8.setMinimumSize(new java.awt.Dimension(50, 50));
        b8.setPreferredSize(new java.awt.Dimension(50, 50));
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });
        getContentPane().add(b8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, -1, -1));

        c5.setBackground(new java.awt.Color(255, 0, 0));
        c5.setMaximumSize(new java.awt.Dimension(50, 50));
        c5.setMinimumSize(new java.awt.Dimension(50, 50));
        c5.setPreferredSize(new java.awt.Dimension(50, 50));
        c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c5ActionPerformed(evt);
            }
        });
        getContentPane().add(c5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, -1, -1));

        c6.setBackground(new java.awt.Color(255, 0, 0));
        c6.setMaximumSize(new java.awt.Dimension(50, 50));
        c6.setMinimumSize(new java.awt.Dimension(50, 50));
        c6.setPreferredSize(new java.awt.Dimension(50, 50));
        c6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c6ActionPerformed(evt);
            }
        });
        getContentPane().add(c6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, -1, -1));

        c7.setBackground(new java.awt.Color(255, 0, 0));
        c7.setMaximumSize(new java.awt.Dimension(50, 50));
        c7.setMinimumSize(new java.awt.Dimension(50, 50));
        c7.setPreferredSize(new java.awt.Dimension(50, 50));
        c7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c7ActionPerformed(evt);
            }
        });
        getContentPane().add(c7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, -1, -1));

        c8.setBackground(new java.awt.Color(255, 0, 0));
        c8.setMaximumSize(new java.awt.Dimension(50, 50));
        c8.setMinimumSize(new java.awt.Dimension(50, 50));
        c8.setPreferredSize(new java.awt.Dimension(50, 50));
        c8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c8ActionPerformed(evt);
            }
        });
        getContentPane().add(c8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, -1, -1));

        d5.setBackground(new java.awt.Color(255, 0, 0));
        d5.setMaximumSize(new java.awt.Dimension(50, 50));
        d5.setMinimumSize(new java.awt.Dimension(50, 50));
        d5.setPreferredSize(new java.awt.Dimension(50, 50));
        d5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d5ActionPerformed(evt);
            }
        });
        getContentPane().add(d5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, -1, -1));

        d6.setBackground(new java.awt.Color(255, 0, 0));
        d6.setMaximumSize(new java.awt.Dimension(50, 50));
        d6.setMinimumSize(new java.awt.Dimension(50, 50));
        d6.setPreferredSize(new java.awt.Dimension(50, 50));
        d6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d6ActionPerformed(evt);
            }
        });
        getContentPane().add(d6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));

        f2.setBackground(new java.awt.Color(255, 0, 0));
        f2.setMaximumSize(new java.awt.Dimension(50, 50));
        f2.setMinimumSize(new java.awt.Dimension(50, 50));
        f2.setPreferredSize(new java.awt.Dimension(50, 50));
        f2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f2ActionPerformed(evt);
            }
        });
        getContentPane().add(f2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, -1, -1));

        e4.setBackground(new java.awt.Color(255, 0, 0));
        e4.setMaximumSize(new java.awt.Dimension(50, 50));
        e4.setMinimumSize(new java.awt.Dimension(50, 50));
        e4.setPreferredSize(new java.awt.Dimension(50, 50));
        e4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e4ActionPerformed(evt);
            }
        });
        getContentPane().add(e4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, -1, -1));

        f3.setBackground(new java.awt.Color(255, 0, 0));
        f3.setMaximumSize(new java.awt.Dimension(50, 50));
        f3.setMinimumSize(new java.awt.Dimension(50, 50));
        f3.setPreferredSize(new java.awt.Dimension(50, 50));
        f3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f3ActionPerformed(evt);
            }
        });
        getContentPane().add(f3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, -1, -1));

        g2.setBackground(new java.awt.Color(255, 0, 0));
        g2.setMaximumSize(new java.awt.Dimension(50, 50));
        g2.setMinimumSize(new java.awt.Dimension(50, 50));
        g2.setPreferredSize(new java.awt.Dimension(50, 50));
        g2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g2ActionPerformed(evt);
            }
        });
        getContentPane().add(g2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, -1, -1));

        g3.setBackground(new java.awt.Color(255, 0, 0));
        g3.setMaximumSize(new java.awt.Dimension(50, 50));
        g3.setMinimumSize(new java.awt.Dimension(50, 50));
        g3.setPreferredSize(new java.awt.Dimension(50, 50));
        g3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g3ActionPerformed(evt);
            }
        });
        getContentPane().add(g3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 470, -1, -1));

        f4.setBackground(new java.awt.Color(255, 0, 0));
        f4.setMaximumSize(new java.awt.Dimension(50, 50));
        f4.setMinimumSize(new java.awt.Dimension(50, 50));
        f4.setPreferredSize(new java.awt.Dimension(50, 50));
        f4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f4ActionPerformed(evt);
            }
        });
        getContentPane().add(f4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 420, -1, -1));

        e5.setBackground(new java.awt.Color(255, 0, 0));
        e5.setMaximumSize(new java.awt.Dimension(50, 50));
        e5.setMinimumSize(new java.awt.Dimension(50, 50));
        e5.setPreferredSize(new java.awt.Dimension(50, 50));
        e5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e5ActionPerformed(evt);
            }
        });
        getContentPane().add(e5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, -1, -1));

        f5.setBackground(new java.awt.Color(255, 0, 0));
        f5.setMaximumSize(new java.awt.Dimension(50, 50));
        f5.setMinimumSize(new java.awt.Dimension(50, 50));
        f5.setPreferredSize(new java.awt.Dimension(50, 50));
        f5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f5ActionPerformed(evt);
            }
        });
        getContentPane().add(f5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, -1, -1));

        g4.setBackground(new java.awt.Color(255, 0, 0));
        g4.setMaximumSize(new java.awt.Dimension(50, 50));
        g4.setMinimumSize(new java.awt.Dimension(50, 50));
        g4.setPreferredSize(new java.awt.Dimension(50, 50));
        g4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g4ActionPerformed(evt);
            }
        });
        getContentPane().add(g4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, -1, -1));

        d8.setBackground(new java.awt.Color(255, 0, 0));
        d8.setMaximumSize(new java.awt.Dimension(50, 50));
        d8.setMinimumSize(new java.awt.Dimension(50, 50));
        d8.setPreferredSize(new java.awt.Dimension(50, 50));
        d8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d8ActionPerformed(evt);
            }
        });
        getContentPane().add(d8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 320, -1, -1));

        d7.setBackground(new java.awt.Color(255, 0, 0));
        d7.setMaximumSize(new java.awt.Dimension(50, 50));
        d7.setMinimumSize(new java.awt.Dimension(50, 50));
        d7.setPreferredSize(new java.awt.Dimension(50, 50));
        d7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d7ActionPerformed(evt);
            }
        });
        getContentPane().add(d7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, -1, -1));

        e6.setBackground(new java.awt.Color(255, 0, 0));
        e6.setMaximumSize(new java.awt.Dimension(50, 50));
        e6.setMinimumSize(new java.awt.Dimension(50, 50));
        e6.setPreferredSize(new java.awt.Dimension(50, 50));
        e6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e6ActionPerformed(evt);
            }
        });
        getContentPane().add(e6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, -1, -1));

        e7.setBackground(new java.awt.Color(255, 0, 0));
        e7.setMaximumSize(new java.awt.Dimension(50, 50));
        e7.setMinimumSize(new java.awt.Dimension(50, 50));
        e7.setPreferredSize(new java.awt.Dimension(50, 50));
        e7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e7ActionPerformed(evt);
            }
        });
        getContentPane().add(e7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, -1, -1));

        f6.setBackground(new java.awt.Color(255, 0, 0));
        f6.setMaximumSize(new java.awt.Dimension(50, 50));
        f6.setMinimumSize(new java.awt.Dimension(50, 50));
        f6.setPreferredSize(new java.awt.Dimension(50, 50));
        f6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f6ActionPerformed(evt);
            }
        });
        getContentPane().add(f6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, -1, -1));

        a5.setBackground(new java.awt.Color(255, 0, 0));
        a5.setMaximumSize(new java.awt.Dimension(50, 50));
        a5.setMinimumSize(new java.awt.Dimension(50, 50));
        a5.setPreferredSize(new java.awt.Dimension(50, 50));
        a5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a5ActionPerformed(evt);
            }
        });
        getContentPane().add(a5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, -1, -1));

        e8.setBackground(new java.awt.Color(255, 0, 0));
        e8.setMaximumSize(new java.awt.Dimension(50, 50));
        e8.setMinimumSize(new java.awt.Dimension(50, 50));
        e8.setPreferredSize(new java.awt.Dimension(50, 50));
        e8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e8ActionPerformed(evt);
            }
        });
        getContentPane().add(e8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, -1, -1));

        f7.setBackground(new java.awt.Color(255, 0, 0));
        f7.setMaximumSize(new java.awt.Dimension(50, 50));
        f7.setMinimumSize(new java.awt.Dimension(50, 50));
        f7.setPreferredSize(new java.awt.Dimension(50, 50));
        f7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f7ActionPerformed(evt);
            }
        });
        getContentPane().add(f7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, -1, -1));

        g5.setBackground(new java.awt.Color(255, 0, 0));
        g5.setMaximumSize(new java.awt.Dimension(50, 50));
        g5.setMinimumSize(new java.awt.Dimension(50, 50));
        g5.setPreferredSize(new java.awt.Dimension(50, 50));
        g5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g5ActionPerformed(evt);
            }
        });
        getContentPane().add(g5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, -1, -1));

        g6.setBackground(new java.awt.Color(255, 0, 0));
        g6.setMaximumSize(new java.awt.Dimension(50, 50));
        g6.setMinimumSize(new java.awt.Dimension(50, 50));
        g6.setPreferredSize(new java.awt.Dimension(50, 50));
        g6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g6ActionPerformed(evt);
            }
        });
        getContentPane().add(g6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 470, -1, -1));

        f8.setBackground(new java.awt.Color(255, 0, 0));
        f8.setMaximumSize(new java.awt.Dimension(50, 50));
        f8.setMinimumSize(new java.awt.Dimension(50, 50));
        f8.setPreferredSize(new java.awt.Dimension(50, 50));
        f8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f8ActionPerformed(evt);
            }
        });
        getContentPane().add(f8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, -1, -1));

        g7.setBackground(new java.awt.Color(255, 0, 0));
        g7.setMaximumSize(new java.awt.Dimension(50, 50));
        g7.setMinimumSize(new java.awt.Dimension(50, 50));
        g7.setPreferredSize(new java.awt.Dimension(50, 50));
        g7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g7ActionPerformed(evt);
            }
        });
        getContentPane().add(g7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 470, -1, -1));

        g8.setBackground(new java.awt.Color(255, 0, 0));
        g8.setMaximumSize(new java.awt.Dimension(50, 50));
        g8.setMinimumSize(new java.awt.Dimension(50, 50));
        g8.setPreferredSize(new java.awt.Dimension(50, 50));
        g8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g8ActionPerformed(evt);
            }
        });
        getContentPane().add(g8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 470, -1, -1));

        h1.setBackground(new java.awt.Color(255, 0, 0));
        h1.setMaximumSize(new java.awt.Dimension(50, 50));
        h1.setMinimumSize(new java.awt.Dimension(50, 50));
        h1.setPreferredSize(new java.awt.Dimension(50, 50));
        h1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h1ActionPerformed(evt);
            }
        });
        getContentPane().add(h1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, -1, -1));

        h3.setBackground(new java.awt.Color(255, 0, 0));
        h3.setMaximumSize(new java.awt.Dimension(50, 50));
        h3.setMinimumSize(new java.awt.Dimension(50, 50));
        h3.setPreferredSize(new java.awt.Dimension(50, 50));
        h3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h3ActionPerformed(evt);
            }
        });
        getContentPane().add(h3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 520, -1, -1));

        h2.setBackground(new java.awt.Color(255, 0, 0));
        h2.setMaximumSize(new java.awt.Dimension(50, 50));
        h2.setMinimumSize(new java.awt.Dimension(50, 50));
        h2.setPreferredSize(new java.awt.Dimension(50, 50));
        h2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h2ActionPerformed(evt);
            }
        });
        getContentPane().add(h2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 520, -1, -1));

        h4.setBackground(new java.awt.Color(255, 0, 0));
        h4.setMaximumSize(new java.awt.Dimension(50, 50));
        h4.setMinimumSize(new java.awt.Dimension(50, 50));
        h4.setPreferredSize(new java.awt.Dimension(50, 50));
        h4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h4ActionPerformed(evt);
            }
        });
        getContentPane().add(h4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 520, -1, -1));

        h5.setBackground(new java.awt.Color(255, 0, 0));
        h5.setMaximumSize(new java.awt.Dimension(50, 50));
        h5.setMinimumSize(new java.awt.Dimension(50, 50));
        h5.setPreferredSize(new java.awt.Dimension(50, 50));
        h5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h5ActionPerformed(evt);
            }
        });
        getContentPane().add(h5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, -1, -1));

        h6.setBackground(new java.awt.Color(255, 0, 0));
        h6.setMaximumSize(new java.awt.Dimension(50, 50));
        h6.setMinimumSize(new java.awt.Dimension(50, 50));
        h6.setPreferredSize(new java.awt.Dimension(50, 50));
        h6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h6ActionPerformed(evt);
            }
        });
        getContentPane().add(h6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 520, -1, -1));

        h7.setBackground(new java.awt.Color(255, 0, 0));
        h7.setMaximumSize(new java.awt.Dimension(50, 50));
        h7.setMinimumSize(new java.awt.Dimension(50, 50));
        h7.setPreferredSize(new java.awt.Dimension(50, 50));
        h7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h7ActionPerformed(evt);
            }
        });
        getContentPane().add(h7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 520, -1, -1));

        h8.setBackground(new java.awt.Color(255, 0, 0));
        h8.setMaximumSize(new java.awt.Dimension(50, 50));
        h8.setMinimumSize(new java.awt.Dimension(50, 50));
        h8.setPreferredSize(new java.awt.Dimension(50, 50));
        h8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h8ActionPerformed(evt);
            }
        });
        getContentPane().add(h8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 520, -1, -1));

        a2.setBackground(new java.awt.Color(255, 0, 0));
        a2.setMaximumSize(new java.awt.Dimension(50, 50));
        a2.setMinimumSize(new java.awt.Dimension(50, 50));
        a2.setPreferredSize(new java.awt.Dimension(50, 50));
        a2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a2ActionPerformed(evt);
            }
        });
        getContentPane().add(a2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, -1));

        tablero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tablero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/board2.png"))); // NOI18N
        getContentPane().add(tablero, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 166, 476, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initBoard(){
        a1.setOpaque(false);
        a1.setContentAreaFilled(false);
        a1.setBorderPainted(false);
        a2.setOpaque(false);
        a2.setContentAreaFilled(false);
        a2.setBorderPainted(false);
        a3.setOpaque(false);
        a3.setContentAreaFilled(false);
        a3.setBorderPainted(false);
        a4.setOpaque(false);
        a4.setContentAreaFilled(false);
        a4.setBorderPainted(false);
        a5.setOpaque(false);
        a5.setContentAreaFilled(false);
        a5.setBorderPainted(false);
        a6.setOpaque(false);
        a6.setContentAreaFilled(false);
        a6.setBorderPainted(false);
        a7.setOpaque(false);
        a7.setContentAreaFilled(false);
        a7.setBorderPainted(false);
        a8.setOpaque(false);
        a8.setContentAreaFilled(false);
        a8.setBorderPainted(false);
        b1.setOpaque(false);
        b1.setContentAreaFilled(false);
        b1.setBorderPainted(false);
        b2.setOpaque(false);
        b2.setContentAreaFilled(false);
        b2.setBorderPainted(false);
        b3.setOpaque(false);
        b3.setContentAreaFilled(false);
        b3.setBorderPainted(false);
        b4.setOpaque(false);
        b4.setContentAreaFilled(false);
        b4.setBorderPainted(false);
        b5.setOpaque(false);
        b5.setContentAreaFilled(false);
        b5.setBorderPainted(false);
        b6.setOpaque(false);
        b6.setContentAreaFilled(false);
        b6.setBorderPainted(false);
        b7.setOpaque(false);
        b7.setContentAreaFilled(false);
        b7.setBorderPainted(false);
        b8.setOpaque(false);
        b8.setContentAreaFilled(false);
        b8.setBorderPainted(false);
        c1.setOpaque(false);
        c1.setContentAreaFilled(false);
        c1.setBorderPainted(false);
        c2.setOpaque(false);
        c2.setContentAreaFilled(false);
        c2.setBorderPainted(false);
        c3.setOpaque(false);
        c3.setContentAreaFilled(false);
        c3.setBorderPainted(false);
        c4.setOpaque(false);
        c4.setContentAreaFilled(false);
        c4.setBorderPainted(false);
        c5.setOpaque(false);
        c5.setContentAreaFilled(false);
        c5.setBorderPainted(false);
        c6.setOpaque(false);
        c6.setContentAreaFilled(false);
        c6.setBorderPainted(false);
        c7.setOpaque(false);
        c7.setContentAreaFilled(false);
        c7.setBorderPainted(false);
        c8.setOpaque(false);
        c8.setContentAreaFilled(false);
        c8.setBorderPainted(false);
        d1.setOpaque(false);
        d1.setContentAreaFilled(false);
        d1.setBorderPainted(false);
        d2.setOpaque(false);
        d2.setContentAreaFilled(false);
        d2.setBorderPainted(false);
        d3.setOpaque(false);
        d3.setContentAreaFilled(false);
        d3.setBorderPainted(false);
        d4.setOpaque(false);
        d4.setContentAreaFilled(false);
        d4.setBorderPainted(false);
        d5.setOpaque(false);
        d5.setContentAreaFilled(false);
        d5.setBorderPainted(false);
        d6.setOpaque(false);
        d6.setContentAreaFilled(false);
        d6.setBorderPainted(false);
        d7.setOpaque(false);
        d7.setContentAreaFilled(false);
        d7.setBorderPainted(false);
        d8.setOpaque(false);
        d8.setContentAreaFilled(false);
        d8.setBorderPainted(false);
        e1.setOpaque(false);
        e1.setContentAreaFilled(false);
        e1.setBorderPainted(false);
        e2.setOpaque(false);
        e2.setContentAreaFilled(false);
        e2.setBorderPainted(false);
        e3.setOpaque(false);
        e3.setContentAreaFilled(false);
        e3.setBorderPainted(false);
        e4.setOpaque(false);
        e4.setContentAreaFilled(false);
        e4.setBorderPainted(false);
        e5.setOpaque(false);
        e5.setContentAreaFilled(false);
        e5.setBorderPainted(false);
        e6.setOpaque(false);
        e6.setContentAreaFilled(false);
        e6.setBorderPainted(false);
        e7.setOpaque(false);
        e7.setContentAreaFilled(false);
        e7.setBorderPainted(false);
        e8.setOpaque(false);
        e8.setContentAreaFilled(false);
        e8.setBorderPainted(false);
        f1.setOpaque(false);
        f1.setContentAreaFilled(false);
        f1.setBorderPainted(false);
        f2.setOpaque(false);
        f2.setContentAreaFilled(false);
        f2.setBorderPainted(false);
        f3.setOpaque(false);
        f3.setContentAreaFilled(false);
        f3.setBorderPainted(false);
        f4.setOpaque(false);
        f4.setContentAreaFilled(false);
        f4.setBorderPainted(false);
        f5.setOpaque(false);
        f5.setContentAreaFilled(false);
        f5.setBorderPainted(false);
        f6.setOpaque(false);
        f6.setContentAreaFilled(false);
        f6.setBorderPainted(false);
        f7.setOpaque(false);
        f7.setContentAreaFilled(false);
        f7.setBorderPainted(false);
        f8.setOpaque(false);
        f8.setContentAreaFilled(false);
        f8.setBorderPainted(false);
        g1.setOpaque(false);
        g1.setContentAreaFilled(false);
        g1.setBorderPainted(false);
        g2.setOpaque(false);
        g2.setContentAreaFilled(false);
        g2.setBorderPainted(false);
        g3.setOpaque(false);
        g3.setContentAreaFilled(false);
        g3.setBorderPainted(false);
        g4.setOpaque(false);
        g4.setContentAreaFilled(false);
        g4.setBorderPainted(false);
        g5.setOpaque(false);
        g5.setContentAreaFilled(false);
        g5.setBorderPainted(false);
        g6.setOpaque(false);
        g6.setContentAreaFilled(false);
        g6.setBorderPainted(false);
        g7.setOpaque(false);
        g7.setContentAreaFilled(false);
        g7.setBorderPainted(false);
        g8.setOpaque(false);
        g8.setContentAreaFilled(false);
        g8.setBorderPainted(false);
        h1.setOpaque(false);
        h1.setContentAreaFilled(false);
        h1.setBorderPainted(false);
        h2.setOpaque(false);
        h2.setContentAreaFilled(false);
        h2.setBorderPainted(false);
        h3.setOpaque(false);
        h3.setContentAreaFilled(false);
        h3.setBorderPainted(false);
        h4.setOpaque(false);
        h4.setContentAreaFilled(false);
        h4.setBorderPainted(false);
        h5.setOpaque(false);
        h5.setContentAreaFilled(false);
        h5.setBorderPainted(false);
        h6.setOpaque(false);
        h6.setContentAreaFilled(false);
        h6.setBorderPainted(false);
        h7.setOpaque(false);
        h7.setContentAreaFilled(false);
        h7.setBorderPainted(false);
        h8.setOpaque(false);
        h8.setContentAreaFilled(false);
        h8.setBorderPainted(false);
    }
    
    private File cargarSprite(){
        int resultado;
        File sprite = null;
        SeleccionarArchivo ventana = new SeleccionarArchivo();
        ventana.fileChooser.setCurrentDirectory(new File ("src/resources/sprites"));
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG"
            ,"jpg","png");
        ventana.fileChooser.setFileFilter(filtro);
        resultado = ventana.fileChooser.showOpenDialog(null);
        if (JFileChooser.APPROVE_OPTION == resultado){
            sprite = ventana.fileChooser.getSelectedFile();
        }
        return sprite;
    }
    
    private File crearImagen() throws IOException{
        ArrayList<BufferedImage> input = new ArrayList<>();
        BufferedImage boardSprite = ImageIO.read(new File("src/resources/board.png"));
        try {
            for (int i = 0; i < listaDePiezas.size(); i++) {
                input.add(ImageIO.read(listaDePiezas.get(i).getImagen()));
            }
        } catch (IOException ex) {
            Logger.getLogger(CrearJugadaTactica.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedImage output = new BufferedImage( 
        boardSprite.getWidth(), 
        boardSprite.getHeight(), 
        BufferedImage.TYPE_INT_ARGB ); 
        Graphics g = output.getGraphics();
        g.drawImage(boardSprite, 0, 0, null );
        for ( int i = 0; i < input.size(); i++ ) {
            g.drawImage( input.get(i), listaDePiezas.get(i).getPosicionX(), listaDePiezas.get(i).getPosicionY(), 100, 100, null );
        } 
        File p = new File( "src/resources/images/" + nombreTXT.getText() + anioTXT.getText() + ".png" );
        try {
            ImageIO.write( output, "PNG", p );
        } catch (IOException ex) {
            Logger.getLogger(CrearJugadaTactica.class.getName()).log(Level.SEVERE, null, ex);
        }
        return p;
    }
    
    public void copyFile(File s, File t){
        try{
              FileChannel in = (new FileInputStream(s)).getChannel();
              FileChannel out = (new FileOutputStream(t)).getChannel();
              in.transferTo(0, s.length(), out);
              in.close();
              out.close();
        }
        catch(Exception e){}
    }
    
    private void nombreTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTXTActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        if (fichero != null){
           fichero.delete();
        }
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void cargarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarFotoActionPerformed
        int resultado;
        File copyFileAux;
        SeleccionarArchivo ventana = new SeleccionarArchivo();
        Date date = new Date() ;
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
        try{
            ventana.fileChooser.setCurrentDirectory(new File (System.getProperty("user.home") + System.getProperty("file.separator")+ "Pictures"));
        }
        catch (Exception e){}
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG"
                                                                  ,"jpg","png");
        ventana.fileChooser.setFileFilter(filtro);
        resultado = ventana.fileChooser.showOpenDialog(null);
        if (JFileChooser.APPROVE_OPTION == resultado){
            if (fichero != null){
                fichero.delete();
            }
            copyFileAux = ventana.fileChooser.getSelectedFile();
            copyFile(copyFileAux, new File("src/resources/images/" + dateFormat.format(date) + ".png"));
            fichero = new File ("src/resources/images/" + dateFormat.format(date) + ".png");
        }
        try{
            direccionImagen.setText(fichero.getPath());
            direccionImagen.setText(fichero.getPath());
            ImageIcon icon = new ImageIcon(fichero.toString());
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(
            tablero.getWidth(), tablero.getHeight(), Image.SCALE_DEFAULT));
            tablero.setIcon(icono);
        }
        catch(Exception e){}
    }//GEN-LAST:event_cargarFotoActionPerformed

    private void anioTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anioTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anioTXTActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        if (nombreTXT.getText().equals("") || anioTXT.getText().equals("")){
            JOptionPane.showMessageDialog(null, "faltan campos por llenar", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{String pNombre, pAnio;
            pNombre = nombreTXT.getText();
            pAnio = anioTXT.getText();
            JugadaTeorica nuevaJugadaTeorica = null;
            if (fichero != null){
                nuevaJugadaTeorica = new JugadaTeorica (pNombre, pAnio, fichero);
            }
            if(fichero == null){
                try {
                    fichero = crearImagen();
                } catch (IOException ex) {
                    Logger.getLogger(CrearJugadaTactica.class.getName()).log(Level.SEVERE, null, ex);
                }
                nuevaJugadaTeorica = new JugadaTeorica (pNombre, pAnio, fichero);
            }
            partida.anadirJugada( (Jugada)nuevaJugadaTeorica );
            application.EntrenadorDeAjedrez.setPartida(partida);
            application.EntrenadorDeAjedrez.write();
            this.dispose();
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 0, sprite);
        a1.setText(sprite.toString());
        a1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a1ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 100, sprite);
        b1.setText(sprite.toString());
        b1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b1ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 200, sprite);
        c1.setText(sprite.toString());
        c1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c1ActionPerformed

    private void d1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 300, sprite);
        d1.setText(sprite.toString());
        d1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d1ActionPerformed

    private void e1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 400, sprite);
        e1.setText(sprite.toString());
        e1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e1ActionPerformed

    private void f1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 500, sprite);
        f1.setText(sprite.toString());
        f1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f1ActionPerformed

    private void g1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 600, sprite);
        g1.setText(sprite.toString());
        g1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 100, sprite);
        b2.setText(sprite.toString());
        b2.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b2ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 200, sprite);
        c2.setText(sprite.toString());
        c2.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c2ActionPerformed

    private void d2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 300, sprite);
        d1.setText(sprite.toString());
        d1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d2ActionPerformed

    private void a3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 0, sprite);
        a3.setText(sprite.toString());
        a3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a3ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 100, sprite);
        b3.setText(sprite.toString());
        b3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b3ActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 200, sprite);
        c3.setText(sprite.toString());
        c3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c3ActionPerformed

    private void e2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 400, sprite);
        e2.setText(sprite.toString());
        e2.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e2ActionPerformed

    private void d3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 300, sprite);
        d3.setText(sprite.toString());
        d3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d3ActionPerformed

    private void a4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 0, sprite);
        a4.setText(sprite.toString());
        a4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a4ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 100, sprite);
        b4.setText(sprite.toString());
        b4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b4ActionPerformed

    private void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 200, sprite);
        c4.setText(sprite.toString());
        c4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c4ActionPerformed

    private void d4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 300, sprite);
        d4.setText(sprite.toString());
        d4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d4ActionPerformed

    private void e3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 400, sprite);
        e3.setText(sprite.toString());
        e3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e3ActionPerformed

    private void a5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 0, sprite);
        a5.setText(sprite.toString());
        a5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a5ActionPerformed

    private void a6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 0, sprite);
        a6.setText(sprite.toString());
        a6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a6ActionPerformed

    private void a7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 0, sprite);
        a7.setText(sprite.toString());
        a7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a7ActionPerformed

    private void a8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 0, sprite);
        a8.setText(sprite.toString());
        a8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a8ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 100, sprite);
        b5.setText(sprite.toString());
        b5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 100, sprite);
        b6.setText(sprite.toString());
        b6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 100, sprite);
        b7.setText(sprite.toString());
        b7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 100, sprite);
        b8.setText(sprite.toString());
        b8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_b8ActionPerformed

    private void c5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 200, sprite);
        c5.setText(sprite.toString());
        c5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c5ActionPerformed

    private void c6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 200, sprite);
        c6.setText(sprite.toString());
        c6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c6ActionPerformed

    private void c7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 200, sprite);
        c7.setText(sprite.toString());
        c7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c7ActionPerformed

    private void c8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 200, sprite);
        c8.setText(sprite.toString());
        c8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_c8ActionPerformed

    private void d5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 300, sprite);
        d5.setText(sprite.toString());
        d5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d5ActionPerformed

    private void d6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 300, sprite);
        d6.setText(sprite.toString());
        d6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d6ActionPerformed

    private void f2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 500, sprite);
        f2.setText(sprite.toString());
        f2.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f2ActionPerformed

    private void e4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 400, sprite);
        e4.setText(sprite.toString());
        e4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e4ActionPerformed

    private void f3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 500, sprite);
        f3.setText(sprite.toString());
        f3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f3ActionPerformed

    private void g2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 600, sprite);
        g2.setText(sprite.toString());
        g2.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g2ActionPerformed

    private void g3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 600, sprite);
        g3.setText(sprite.toString());
        g3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g3ActionPerformed

    private void f4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 500, sprite);
        f4.setText(sprite.toString());
        f4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f4ActionPerformed

    private void e5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 400, sprite);
        e5.setText(sprite.toString());
        e5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e5ActionPerformed

    private void f5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 500, sprite);
        f5.setText(sprite.toString());
        f5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f5ActionPerformed

    private void g4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 600, sprite);
        g4.setText(sprite.toString());
        g4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g4ActionPerformed

    private void d8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 300, sprite);
        d8.setText(sprite.toString());
        d8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d8ActionPerformed

    private void d7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 300, sprite);
        d7.setText(sprite.toString());
        d7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_d7ActionPerformed

    private void e6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 400, sprite);
        e6.setText(sprite.toString());
        e6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e6ActionPerformed

    private void e7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 400, sprite);
        e7.setText(sprite.toString());
        e7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e7ActionPerformed

    private void f6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 500, sprite);
        f6.setText(sprite.toString());
        f6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f6ActionPerformed

    private void e8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 400, sprite);
        e8.setText(sprite.toString());
        e8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_e8ActionPerformed

    private void f7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 500, sprite);
        f7.setText(sprite.toString());
        f7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f7ActionPerformed

    private void g5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 600, sprite);
        g5.setText(sprite.toString());
        g5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g5ActionPerformed

    private void g6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 600, sprite);
        g6.setText(sprite.toString());
        g6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g6ActionPerformed

    private void f8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 500, sprite);
        f8.setText(sprite.toString());
        f8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_f8ActionPerformed

    private void g7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 600, sprite);
        g7.setText(sprite.toString());
        g7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g7ActionPerformed

    private void g8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 600, sprite);
        g8.setText(sprite.toString());
        g8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_g8ActionPerformed

    private void h1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h1ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(0, 700, sprite);
        h1.setText(sprite.toString());
        h1.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h1ActionPerformed

    private void h3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h3ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(200, 700, sprite);
        h3.setText(sprite.toString());
        h3.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h3ActionPerformed

    private void h2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 700, sprite);
        h2.setText(sprite.toString());
        h2.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h2ActionPerformed

    private void h4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h4ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(300, 700, sprite);
        h4.setText(sprite.toString());
        h4.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h4ActionPerformed

    private void h5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h5ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(400, 700, sprite);
        h5.setText(sprite.toString());
        h5.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h5ActionPerformed

    private void h6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h6ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(500, 700, sprite);
        h6.setText(sprite.toString());
        h6.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h6ActionPerformed

    private void h7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h7ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(600, 700, sprite);
        h7.setText(sprite.toString());
        h7.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h7ActionPerformed

    private void h8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h8ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(700, 700, sprite);
        h8.setText(sprite.toString());
        h8.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_h8ActionPerformed

    private void a2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a2ActionPerformed
        File sprite = cargarSprite();
        Pieza pieza = new Pieza(100, 0, sprite);
        a2.setText(sprite.toString());
        a2.setEnabled(false);
        listaDePiezas.add(pieza);
    }//GEN-LAST:event_a2ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton a1;
    private javax.swing.JButton a2;
    private javax.swing.JButton a3;
    private javax.swing.JButton a4;
    private javax.swing.JButton a5;
    private javax.swing.JButton a6;
    private javax.swing.JButton a7;
    private javax.swing.JButton a8;
    private javax.swing.JLabel anio;
    private javax.swing.JTextField anioTXT;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton c1;
    private javax.swing.JButton c2;
    private javax.swing.JButton c3;
    private javax.swing.JButton c4;
    private javax.swing.JButton c5;
    private javax.swing.JButton c6;
    private javax.swing.JButton c7;
    private javax.swing.JButton c8;
    private javax.swing.JToggleButton cancelar;
    private javax.swing.JButton cargarFoto;
    private javax.swing.JButton d1;
    private javax.swing.JButton d2;
    private javax.swing.JButton d3;
    private javax.swing.JButton d4;
    private javax.swing.JButton d5;
    private javax.swing.JButton d6;
    private javax.swing.JButton d7;
    private javax.swing.JButton d8;
    private javax.swing.JLabel direccionImagen;
    private javax.swing.JButton e1;
    private javax.swing.JButton e2;
    private javax.swing.JButton e3;
    private javax.swing.JButton e4;
    private javax.swing.JButton e5;
    private javax.swing.JButton e6;
    private javax.swing.JButton e7;
    private javax.swing.JButton e8;
    private javax.swing.JButton f1;
    private javax.swing.JButton f2;
    private javax.swing.JButton f3;
    private javax.swing.JButton f4;
    private javax.swing.JButton f5;
    private javax.swing.JButton f6;
    private javax.swing.JButton f7;
    private javax.swing.JButton f8;
    private javax.swing.JButton g1;
    private javax.swing.JButton g2;
    private javax.swing.JButton g3;
    private javax.swing.JButton g4;
    private javax.swing.JButton g5;
    private javax.swing.JButton g6;
    private javax.swing.JButton g7;
    private javax.swing.JButton g8;
    private javax.swing.JButton guardar;
    private javax.swing.JButton h1;
    private javax.swing.JButton h2;
    private javax.swing.JButton h3;
    private javax.swing.JButton h4;
    private javax.swing.JButton h5;
    private javax.swing.JButton h6;
    private javax.swing.JButton h7;
    private javax.swing.JButton h8;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField nombreTXT;
    private javax.swing.JLabel tablero;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
